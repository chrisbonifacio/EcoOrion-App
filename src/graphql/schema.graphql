type Image {
  bucket: String!
  region: String!
  key: String!
}

type Range {
  min: Float
  max: Float
  scale_unit: String
}

# graphql/schema.graphql
type Plant
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["admin"]
        operations: [create, update, delete, read]
      }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  type: String!
  scientific_name: String!
  name_bm: String!
  name_cn: String
  temperature: Range
  height: Range
  seed_planting_depth: Range
  planting_distance_between_plants: Range
  pruning_requirement: String!
  soil_moisture: String!
  sunlight: Range
  germination: Range
  harvest_day: Range
  harvest_month: Range
  water_amount: String!
  watering_frequency: String!
  watering_duration: String!
  plant_nature: String!
  pest_info: String!
  disease_info: String!
  image_url: [Image]
}

type Pest
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["admin"]
        operations: [create, update, delete, read]
      }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  description: String!
  detection: String!
  management: String!
  notes: String!
  image_url: [Image]!
}

type Disease
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["admin"]
        operations: [create, update, delete, read]
      }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  description: String!
  detection: String!
  management: String!
  notes: String!
  image_url: [Image]
}

type Rack
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["admin"]
        operations: [create, update, delete, read]
      }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  description: String!
  image_url: [Image]!
  price: Float!
}
type NutrientTerminology
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["admin"]
        operations: [create, update, delete, read]
      }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  meaning: String!
  image_url: [Image]!
}

type Nutrient
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["admin"]
        operations: [create, update, delete, read]
      }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  short_name: String!
  type: String!
  importance: String!
  deficient_symptom: String!
  leaf_position: String!
  deficient_image: [Image]!
  worsen: String!
  solution: String!
  toxic_symptom: String!
  toxic_image: [Image]!
}

type ContactForm
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["admin"]
        operations: [create, update, delete, read]
      }
      { allow: public, operations: [create] }
    ]
  ) {
  id: ID!
  name: String!
  email: String!
  phone: String!
  message: String!
}
